<?php
// $Id$
// $Name$
// for drupal 7.x

/**
 * @file
 * imagepicker install, update and uninstall functions
 */

/**
 * Implements hook_install().
 */
function imagepicker_install() {
  // Create a directory structure.
  $drupaldir = str_replace('/', DIRECTORY_SEPARATOR, getcwd()) . DIRECTORY_SEPARATOR;
  $dir = $drupaldir . file_stream_wrapper_get_instance_by_scheme('public')->getDirectoryPath() . DIRECTORY_SEPARATOR . 'imagepicker';

  if (file_prepare_directory($dir, FILE_CREATE_DIRECTORY)) {
    drupal_get_messages('status', TRUE);
  }
  else {
    drupal_set_message(st('Directory creation for the Imagepicker module was unsuccessful.'), 'error');
  }
}

/**
 * Implements hook_schema().
 */
function imagepicker_schema() {
  $schema['imagepicker'] = array(
    'description' => 'The image table',
    'fields' => array(
      'img_id' => array(
        'description' => 'The primary image identifier.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'uid' => array(
        'description' => 'The user identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'img_name' => array(
        'description' => 'The image name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'img_title' => array(
        'description' => 'The image title',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'img_description' => array(
        'description' => 'The image description',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'img_date' => array(
        'description' => 'The image date',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
    ),
    'indexes' => array(
      'uid' => array('uid'),
    ),
    'primary key' => array('img_id'),
  );

  $schema['imagepicker_user_groups'] = array(
    'description' => 'The groups table',
    'fields' => array(
      'gid' => array(
        'description' => 'The primary group identifier.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'uid' => array(
        'description' => 'The user identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'group_name' => array(
        'description' => 'The group name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'group_description' => array(
        'description' => 'The group description.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'state' => array(
        'description' => 'The currently selected group.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'public' => array(
        'description' => 'The public flag.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'avail_roles' => array(
        'description' => 'List of roles that may view this group.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'all'),
    ),
    'indexes' => array(
      'uid' => array('uid'),
    ),
    'primary key' => array('gid'),
  );

  $schema['imagepicker_group_images'] = array(
    'fields' => array(
      'gid' => array(
        'description' => 'The group identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'img_id' => array(
        'description' => 'The image identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
    ),
    'indexes' => array(
      'gid' => array('gid'),
      'img_id' => array('img_id'),
    ),
  );

  return $schema;

}

/**
 * Implements hook_uninstall().
 */
function imagepicker_uninstall() {
  // DELETE FROM {variable} WHERE name LIKE 'imagepicker_%'
  $query = db_delete('variable', 'v')
    ->condition('name', 'imagepicker_%', 'LIKE')
    ->execute();
}

