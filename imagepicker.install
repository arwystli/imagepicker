<?php
// $Id$
// $Name$

/**
 * @file
 * imagepicker install, update and uninstall functions
 */

/**
 * Implementation of hook_install().
 */
function imagepicker_install() {
  // Create a directory structure so that usernames would be divided by letters.
  $drupaldir = str_replace('/', DIRECTORY_SEPARATOR, getcwd()) . DIRECTORY_SEPARATOR;
  $dir = $drupaldir . file_directory_path() . DIRECTORY_SEPARATOR .'imagepicker';

  if (! file_check_directory($dir, TRUE)) {

    drupal_set_message(t('Directory creation for the Imagepicker module was unsuccessful.'), 'error');
  }

  // Create tables.
  drupal_install_schema('imagepicker');
}

/**
 * Implementation of hook_schema().
 */
function imagepicker_schema() {
  $schema['imagepicker'] = array(
    'fields' => array(
      'img_id' => array(
        'description' => t('The primary image identifier.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'uid' => array(
        'description' => t('The user identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'img_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'img_title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'img_description' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'img_date' => array(
        'type' => 'datetime',
        'not null' => TRUE),
    ),
    'indexes' => array(
      'uid' => array('uid'),
    ),
    'primary key' => array('img_id'),
  );

  $schema['imagepicker_user_groups'] = array(
    'fields' => array(
      'gid' => array(
        'description' => t('The primary group identifier.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'uid' => array(
        'description' => t('The user identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'group_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'group_description' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'state' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'public' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'avail_roles' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'all'),
    ),
    'indexes' => array(
      'uid' => array('uid'),
    ),
    'primary key' => array('gid'),
  );

  $schema['imagepicker_group_images'] = array(
    'fields' => array(
      'gid' => array(
        'description' => t('The group identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'img_id' => array(
        'description' => t('The image identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
    )
  );

  return $schema;

}

/**
 * Implementation of hook_uninstall().
 */
function imagepicker_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('imagepicker');

  db_query("DELETE FROM {variable} WHERE name LIKE 'imagepicker_%';");
}

function imagepicker_update_1() {

  $schema['imagepicker_user_groups'] = array(
    'fields' => array(
      'gid' => array(
        'description' => t('The primary identifier for a group.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'uid' => array(
        'description' => t('The user identifier for a group.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'group_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'group_description' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'state' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'public' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'avail_roles' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'all'),
    ),
    'indexes' => array(
      'uid' => array('uid'),
    ),
    'primary key' => array('gid'),
  );

  $schema['imagepicker_group_images'] = array(
    'fields' => array(
      'gid' => array(
        'description' => t('The group identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'img_id' => array(
        'description' => t('The image identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
    )
  );

  $ret = array();
  foreach ($schema AS $tablename => $tableschema) {
    db_create_table($ret, $tablename, $tableschema);
  }
  return $ret;
}

function imagepicker_update_6002() {
  $ret = array();
  $sql = "ALTER TABLE {imagepicker_user_groups} ADD `public` tinyint(3) unsigned NOT NULL default '0'";
  $ret[] = update_sql($sql);
  return $ret;

}
function imagepicker_update_6201() {
  $ret = array();
  $sql = "ALTER TABLE {imagepicker_user_groups} ADD `avail_roles` varchar(255) NOT NULL default 'all'";
  $ret[] = update_sql($sql);
  return $ret;
}
